---

- name: Create project directory
  become: true
  file:
    path: "{{ app_root_dir }}"
    state: directory
    owner: www-data
    group: www-data
    recurse: true
  tags:
    - deploy

- name: Clone/Pull git repository
  git:
    repo: "{{ app_repo_remote }}"
    dest: "{{ app_root_dir }}"
    version: "{{ app_repo_branch }}"
    accept_hostkey: yes
    force: yes
  tags:
    - deploy

- name: Create directory for logs
  become: true
  file:
    path: "{{ app_log_dir }}"
    state: directory
    owner: www-data
    group: www-data
    recurse: true
  tags:
    - deploy

- name: Create run directory
  become: true
  file:
    path: "{{ app_run_dir }}"
    state: directory
    owner: www-data
    group: www-data
    recurse: true
  tags:
    - deploy

- name: Install PIP dependencies
  pip:
    virtualenv: "{{ app_venv_dir }}"
    virtualenv_python: python3.6
    requirements: "{{ app_root_dir }}/requirements.txt"
  args:
    chdir: "{{ app_root_dir }}"
  tags:
    - deploy

- name: Add env file
  become: true
  template:
    src: templates/env
    dest: "{{ app_root_dir }}/.env"
  tags:
    - deploy

- name: Execute migrations
  command: "{{ app_venv_dir }}/bin/python manage.py migrate"
  register: db_migrations_result
  changed_when: "db_migrations_result.stdout is not search('No migrations to apply')"
  args:
    chdir: "{{ app_root_dir }}"
  tags:
    - deploy
    - migration

- name: Collect static files
  command: "{{ app_venv_dir }}/bin/python manage.py collectstatic --no-input"
  register: collectstatic_result
  changed_when: "collectstatic_result.stdout is not search('0 static files copied')"
  args:
    chdir: "{{ app_root_dir }}"
  tags:
    - deploy